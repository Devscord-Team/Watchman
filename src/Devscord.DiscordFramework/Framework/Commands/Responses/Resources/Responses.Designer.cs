//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Devscord.DiscordFramework.Framework.Commands.Responses.Resources {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Responses {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Responses() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Devscord.DiscordFramework.Framework.Commands.Responses.Resources.Responses", typeof(Responses).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dodano wszystkie role pomyślnie użytkownikowi {{user}}.
        /// </summary>
        public static string AllRolesAddedToUser {
            get {
                return ResourceManager.GetString("AllRolesAddedToUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Usunięto wszystkie role pomyślnie użytkownikowi {{user}}.
        /// </summary>
        public static string AllRolesRemovedFromUser {
            get {
                return ResourceManager.GetString("AllRolesRemovedFromUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zmieniono ustawienia wszystkich powyższych roli pomyślnie.
        /// </summary>
        public static string AllRolesSettingsChanged {
            get {
                return ResourceManager.GetString("AllRolesSettingsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Podane argumenty są zduplikowane..
        /// </summary>
        public static string ArgumentsDuplicated {
            get {
                return ResourceManager.GetString("ArgumentsDuplicated", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dostępne role: {{roles}}.
        /// </summary>
        public static string AvailableSafeRoles {
            get {
                return ResourceManager.GetString("AvailableSafeRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nie można usunąć prefixu **{{prefix}}**.
        /// </summary>
        public static string CannotRemovePrefix {
            get {
                return ResourceManager.GetString("CannotRemovePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dla tego polecenia są dostępne tylko argumenty: {{arguments}}.
        ///   Looks up a localized string similar to Podane argumenty są niepoprawne.

        /// </summary>
        public static string InvalidArguments {
            get {
                return ResourceManager.GetString("InvalidArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Użytkownik {{user}} został wyciszony do {{timeEnd}}.
        /// </summary>
        public static string MutedUser {
            get {
                return ResourceManager.GetString("MutedUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Cześć {{user}}! Witamy cię na serwerze {{server}}.
        /// </summary>
        public static string NewUserArrived {
            get {
                return ResourceManager.GetString("NewUserArrived", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nie masz wystarczających uprawnień do wywołania tej komendy..
        /// </summary>
        public static string NotAdminPermissions {
            get {
                return ResourceManager.GetString("NotAdminPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Podano niewystarczającą liczbę argumentów!.
        /// </summary>
        public static string NotEnoughArguments {
            get {
                return ResourceManager.GetString("NotEnoughArguments", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Liczba wiadomości w podanym zakresie jest ogromna ({{messagesCount}} wiadomości). Czy na pewno chcesz wszystkie przeczytać? (użyj parametru -force).
        /// </summary>
        public static string NumberOfMessagesIsHuge {
            get {
                return ResourceManager.GetString("NumberOfMessagesIsHuge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix **{{prefix}}** został dodany..
        /// </summary>
        public static string PrefixAdded {
            get {
                return ResourceManager.GetString("PrefixAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix** {{prefix}}** już istnieje..
        /// </summary>
        public static string PrefixAlreadyExists {
            get {
                return ResourceManager.GetString("PrefixAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serwer {{server}} nie posiada żadnych prefixów..
        /// </summary>
        public static string PrefixesNotFound {
            get {
                return ResourceManager.GetString("PrefixesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix **{{prefix}}** został usunięty..
        /// </summary>
        public static string PrefixRemoved {
            get {
                return ResourceManager.GetString("PrefixRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dostępne komendy: ```{{help}}```.
        /// </summary>
        public static string PrintHelp {
            get {
                return ResourceManager.GetString("PrintHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zakończono wczytywanie historii wiadomości..
        /// </summary>
        public static string ReadingHistoryDone {
            get {
                return ResourceManager.GetString("ReadingHistoryDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Odpowiedź `{{onEvent}}` już istnieje dla serwera **{{server}}**..
        /// </summary>
        public static string ResponseAlreadyExists {
            get {
                return ResourceManager.GetString("ResponseAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Odpowiedź `{{onEvent}}` została dodana dla serwera **{{server}}**..
        /// </summary>
        public static string ResponseHasBeenAdded {
            get {
                return ResourceManager.GetString("ResponseHasBeenAdded", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Odpowiedź `{{onEvent}}` została usunięta dla serwera **{{server}}**..
        /// </summary>
        public static string ResponseHasBeenRemoved {
            get {
                return ResourceManager.GetString("ResponseHasBeenRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Odpowiedź `{{onEvent}}` została zaktualizowana dla serwera **{{server}}**.\nStara odpowiedź: *{{oldMessage}}*.\nNowa odpowiedź: *{{newMessage}}*..
        /// </summary>
        public static string ResponseHasBeenUpdated {
            get {
                return ResourceManager.GetString("ResponseHasBeenUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Odpowiedź `{{onEvent}}` nie została odnaleziona dla serwera **{{server}}**..
        /// </summary>
        public static string ResponseNotFound {
            get {
                return ResourceManager.GetString("ResponseNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Odpowiedź `{{onEvent}}` po zmianie odpowiedź jest identyczna jak domyślna, usunięto odpowiedź na serwerze **{{server}}**..
        /// </summary>
        public static string ResponseTheSameAsDefault {
            get {
                return ResourceManager.GetString("ResponseTheSameAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dodano role: {{role}} użytkownikowi {{user}}.
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dodano role: {{role}} użytkownikowi {{user}}.
        /// </summary>
        public static string RoleAddedToUser {
            get {
                return ResourceManager.GetString("RoleAddedToUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} posiada już role {{role}}.
        /// </summary>
        public static string RoleIsInUserAlready {
            get {
                return ResourceManager.GetString("RoleIsInUserAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Rola &quot;{{role}}&quot; już jest ustawiona jako bezpieczna..
        /// </summary>
        public static string RoleIsSafeAlready {
            get {
                return ResourceManager.GetString("RoleIsSafeAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Rola &quot;{{role}}&quot; nie jest już ustawiona jako bezpieczna.
        /// </summary>
        public static string RoleIsUnsafeAlready {
            get {
                return ResourceManager.GetString("RoleIsUnsafeAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nie znaleziono roli {{role}}..
        /// </summary>
        public static string RoleNotFound {
            get {
                return ResourceManager.GetString("RoleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} nie posiada roli {{role}}.
        /// </summary>
        public static string RoleNotFoundInUser {
            get {
                return ResourceManager.GetString("RoleNotFoundInUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nie znaleziono roli {{role}} lub wybrana rola musi być zmieniona ręcznie przez członka administracji.
        /// </summary>
        public static string RoleNotFoundOrIsNotSafe {
            get {
                return ResourceManager.GetString("RoleNotFoundOrIsNotSafe", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Usunięto role {{role}} użytkownikowi {{user}}.
        /// </summary>
        public static string RoleRemovedFromUser {
            get {
                return ResourceManager.GetString("RoleRemovedFromUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zmieniono ustawienia roli {{role}} pomyślnie!.
        /// </summary>
        public static string RoleSettingsChanged {
            get {
                return ResourceManager.GetString("RoleSettingsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wysłano {{messagesCount}} wiadomości użytkownika {{user}} w wiadomości prywatnej..
        /// </summary>
        public static string SentByDmMessagesOfAskedUser {
            get {
                return ResourceManager.GetString("SentByDmMessagesOfAskedUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Serwer nie ma żadnych dostępnych bezpiecznych ról (jeśli jesteś adminem, ustaw bezpieczne role za pomocą komendy -set role &lt;nazwa_roli&gt; safe) .
        /// </summary>
        public static string ServerDoesntHaveAnySafeRoles {
            get {
                return ResourceManager.GetString("ServerDoesntHaveAnySafeRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dostepne prefixy: {{prefixes}}.
        /// </summary>
        public static string ServerPrefixes {
            get {
                return ResourceManager.GetString("ServerPrefixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spam alert! Wykryto spam u użytkownika {{user}} na kanale {{channel}}. Poczekaj chwile zanim coś napiszesz..
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Spam alert! Wykryto spam u użytkownika {{user}} na kanale {{channel}}. Poczekaj chwile zanim coś napiszesz..
        /// </summary>
        public static string SpamAlertRecognized {
            get {
                return ResourceManager.GetString("SpamAlertRecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Czas nie może być ujemny!.
        /// </summary>
        public static string TimeCannotBeNegative {
            get {
                return ResourceManager.GetString("TimeCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Podano za dużą wartość czasu!.
        /// </summary>
        public static string TimeIsTooBig {
            get {
                return ResourceManager.GetString("TimeIsTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nie określiłeś przedziału czasu!.
        /// </summary>
        public static string TimeNotSpecified {
            get {
                return ResourceManager.GetString("TimeNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} może pisać ponownie..
        /// </summary>
        public static string UnmutedUser {
            get {
                return ResourceManager.GetString("UnmutedUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Cześć {{user}}! Już możesz pisać ponownie na serwerze {{server}}.
        /// </summary>
        public static string UnmutedUserForUser {
            get {
                return ResourceManager.GetString("UnmutedUserForUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nie wskazałeś żadnego użytkownika!.
        /// </summary>
        public static string UserDidntMentionAnyUser {
            get {
                return ResourceManager.GetString("UserDidntMentionAnyUser", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} nie napisał żadnej wiadomości w podanym czasie..
        /// </summary>
        public static string UserDidntWriteAnyMessageInThisTime {
            get {
                return ResourceManager.GetString("UserDidntWriteAnyMessageInThisTime", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} nie posiada avatara..
        /// </summary>
        public static string UserDoesntHaveAvatar {
            get {
                return ResourceManager.GetString("UserDoesntHaveAvatar", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Użytkownik {{user}} nie istnieje..
        /// </summary>
        public static string UserNotFound {
            get {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
    }
}
